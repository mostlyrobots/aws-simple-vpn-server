AWSTemplateFormatVersion: '2010-09-09'
Description: StrongSwan VPN Server with Let's Encrypt

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where the VPN server will be deployed
  
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Public subnet ID for the VPN server
  
  VPNDomain:
    Type: String
    Description: Domain name for VPN server (must point to this server's IP)
    Default: vpn.yourdomain.com
  
  Email:
    Type: String
    Description: Email for Let's Encrypt notifications
    Default: admin@yourdomain.com
  
  VPNUsername:
    Type: String
    Description: VPN username for authentication
    Default: vpnuser
  
  VPNPassword:
    Type: String
    Description: VPN password for authentication
    NoEcho: true
    Default: changeme
  
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: EC2 Key Pair for SSH access

Resources:
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: VPN Server Security Group
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
          Description: SSH
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: LetsEncrypt
        - IpProtocol: udp
          FromPort: 500
          ToPort: 500
          CidrIp: 0.0.0.0/0
          Description: IKEv2
        - IpProtocol: udp
          FromPort: 4500
          ToPort: 4500
          CidrIp: 0.0.0.0/0
          Description: IKEv2-NAT
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: VPN-SecurityGroup

  VPNServer:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Sub '{{resolve:ssm:/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-x86_64}}'
      InstanceType: t3.micro
      KeyName: !Ref KeyName
      NetworkInterfaces:
        - AssociatePublicIpAddress: true
          DeviceIndex: 0
          GroupSet:
            - !Ref SecurityGroup
          SubnetId: !Ref SubnetId
      SourceDestCheck: false
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          set -e
          
          # Create config file
          cat > /root/CONFIG.rc << 'EOF'
          VPN_DOMAIN="${VPNDomain}"
          EMAIL="${Email}"
          VPN_USERNAME="${VPNUsername}"
          VPN_PASSWORD="${VPNPassword}"
          EOF
          
          # Download scripts
          cd /root
          curl -sL https://raw.githubusercontent.com/mostlyrobots/aws-simple-vpn-server/main/setup-strongswan.sh -o setup-strongswan.sh
          curl -sL https://raw.githubusercontent.com/mostlyrobots/aws-simple-vpn-server/main/setup-letsencrypt.sh -o setup-letsencrypt.sh
          chmod +x setup-strongswan.sh setup-letsencrypt.sh
          
          # Run setup
          bash setup-strongswan.sh
          bash setup-letsencrypt.sh
      Tags:
        - Key: Name
          Value: VPN-Server

Outputs:
  ServerPublicIP:
    Description: VPN Server Public IP
    Value: !GetAtt VPNServer.PublicIp
  
  ServerDNS:
    Description: Point your domain to this IP
    Value: !GetAtt VPNServer.PublicIp
  
  VPNDomain:
    Description: VPN Domain Name
    Value: !Ref VPNDomain
  
  VPNUsername:
    Description: VPN Username
    Value: !Ref VPNUsername
